//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace Assets.Utils.PowerCommand
{
		/// <summary>
		/// Factory, which creates Exact Power Command for our needs depending on given PowerType.
		/// </summary>
		public class PowerCommandFactory
		{
			private GameObject _PowerUser;

			/// <summary>
			/// 
			/// </summary>
			/// <param name="PowerUser">GameObject which will use the power; we often need it's transform or components so it's reference is passed</param>
			public PowerCommandFactory(GameObject PowerUser)
			{
				_PowerUser = PowerUser;
			}

			/// <summary>
			/// Create exact Power Command
			/// </summary>
			/// <returns>The power command.</returns>
			/// <param name="PowerType">Power type which we want</param>
			public ICommand CreatePowerCommand(PowerEnum PowerType){
				switch(PowerType) {
					default:
					case PowerEnum.BubbleJump:
						return new BubbleJumpPowerCommand(_PowerUser);

					//TODO
					/*case PowerEnum.CandySpitter:

						break;

					case PowerEnum.SugarBrick:

						break;

					case PowerEnum.None:

						break;*/
				}
			}
		}
}

